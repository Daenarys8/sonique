name: CD

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]

jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Build
      run: |
        npm ci
        npm run build

    - name: Deploy to S3 staging
      run: |
        aws s3 sync dist/ s3://${{ secrets.AWS_S3_STAGING_BUCKET }} --delete
        aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CLOUDFRONT_STAGING_ID }} --paths "/*"

  deploy-production:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [deploy-staging]
    
    steps:
    - uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Build
      run: |
        npm ci
        npm run build:prod

    - name: Deploy to S3 production
      run: |
        aws s3 sync dist/ s3://${{ secrets.AWS_S3_PRODUCTION_BUCKET }} --delete
        aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CLOUDFRONT_PRODUCTION_ID }} --paths "/*"